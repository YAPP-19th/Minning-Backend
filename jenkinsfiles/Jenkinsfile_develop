pipeline {
  agent any
  stages {
    stage('setting properties') {
      steps {
        sh 'mkdir ./src/test/resources'
        sh 'cp ../properties/develop/application.yaml ./src/main/resources'
        sh 'cp ../properties/test/application.yaml ./src/test/resources'
      }
    }
    stage('test') {
      steps {
        sh './gradlew clean test'
      }
    }

    stage('set service key') {
      steps {
        sh 'mkdir ./src/main/resources/firebase'
        sh 'cp ../properties/firebase/firebase_service_key.json ./src/main/resources/firebase'
        sh 'mkdir ./src/main/resources/storage'
        sh 'cp ../properties/storage/minning_storage_key.json ./src/main/resources/storage'
      }
    stage('build') {
      steps {
        sh './gradlew clean build -x test'
      }
    }

    stage('docker build') {
      steps {
        sh 'docker build --tag yapp19th/develop .'
        sh 'docker push yapp19th/develop'
      }
    }

    stage('SSH transfer') {
      steps {
        sshPublisher(failOnError: true, publishers: [
                            sshPublisherDesc(
                                configName: "develop",//Jenkins 시스템 정보에 사전 입력한 서버 ID
                                verbose: true,
                                transfers: [
                                    sshTransfer(
                                         sourceFiles: "run.zsh", //전송할 파일
                                         removePrefix: "", //파일에서 삭제할 경로가 있다면 작성
                                         remoteDirectory: "", //배포할 위치
                                         execCommand: "sh run.zsh" //원격지에서 실행할 커맨드
                                      )
                                    ]
                                  )
                                ])
              }
            }

          }
        }
